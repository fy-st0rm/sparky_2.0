CC = g++
FLAG = -w
OUT = libsparky.a
LINC = -I. -Ivendor/GLEW/include -Ivendor/SDL2_64bit/include -Ivendor/SDL2_64bit/include/SDL2 -Ivendor/imgui/

win:
	@echo ==--[COMPILING]: Sparky2.0 for Windows.--==
	$(MAKE) --no-print-directory win_cmp_core
	$(MAKE) --no-print-directory win_cmp_imgui
	$(MAKE) --no-print-directory win_cmp_gui
	$(MAKE) --no-print-directory win_cmp_entity
	$(MAKE) --no-print-directory win_cmp_component
	$(MAKE) --no-print-directory win_cmp_window
	$(MAKE) --no-print-directory win_cmp_buffers
	$(MAKE) --no-print-directory win_cmp_shader
	$(MAKE) --no-print-directory win_cmp_camera
	$(MAKE) --no-print-directory win_cmp_texture
	$(MAKE) --no-print-directory win_cmp_renderer
	$(MAKE) --no-print-directory win_cmp_app
	$(MAKE) --no-print-directory win_build
	$(MAKE) --no-print-directory win_clean
	@echo ==--[SUCESS]: Library of Sparky2.0 are found in `bin` folder--==

win_reset:
	erase ..\bin\*.a 
	erase ..\bin\*.la 
	erase ..\bin\*.dll 

win_build:
	ar rcf $(OUT) *.o
	copy $(OUT) ..\bin
	copy vendor\GLEW\lib\* ..\bin
	copy vendor\SDL2_64bit\lib\* ..\bin
	copy vendor\GLEW\bin\*.dll ..\bin
	copy vendor\SDL2_64bit\bin\*.dll ..\bin
	
win_clean:
	erase *.o
	erase $(OUT)

win_cmp_core:
	$(CC) $(FLAG) $(LINC) -c core/*.cpp

win_cmp_imgui:
	$(CC) $(FLAG) $(LINC) -c vendor/imgui/*.cpp
	$(CC) $(FLAG) $(LINC) -c vendor/imgui/backends/imgui_impl_sdl.cpp
	$(CC) $(FLAG) $(LINC) -c vendor/imgui/backends/imgui_impl_opengl3.cpp

win_cmp_gui:
	$(CC) $(FLAG) $(LINC) -c gui/*.cpp

win_cmp_entity:
	$(CC) $(FLAG) $(LINC) -c entity/*.cpp

win_cmp_component:
	$(CC) $(FLAG) $(LINC) -c entity/component/*.cpp

win_cmp_window:
	$(CC) $(FLAG) $(LINC) -c window/*.cpp

win_cmp_buffers:
	$(CC) $(FLAG) $(LINC) -c buffers/*.cpp

win_cmp_shader:
	$(CC) $(FLAG) $(LINC) -c shader/*.cpp

win_cmp_camera:
	$(CC) $(FLAG) $(LINC) -c camera/*.cpp

win_cmp_texture:
	$(CC) $(FLAG) $(LINC) -c texture/*.cpp

win_cmp_renderer:
	$(CC) $(FLAG) $(LINC) -c renderer/quad_renderer/*.cpp
	$(CC) $(FLAG) $(LINC) -c renderer/text_renderer/*.cpp
	$(CC) $(FLAG) $(LINC) -c renderer/ui_renderer/*.cpp

win_cmp_app:
	$(CC) $(FLAG) $(LINC) -c application/*.cpp

